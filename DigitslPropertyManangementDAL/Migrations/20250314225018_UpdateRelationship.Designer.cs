// <auto-generated />
using System;
using GP_DigitalPropertyManegmentApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GP_DigitalPropertyManegmentApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250314225018_UpdateRelationship")]
    partial class UpdateRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalPropertyManagmentApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("BotResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Favorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FavoriteId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Preference", b =>
                {
                    b.Property<int>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreferenceId"));

                    b.Property<string>("PreferenceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PreferenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<int?>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Furnished")
                        .HasColumnType("bit");

                    b.Property<string>("Governate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("ListedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.HasIndex("AmenityId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.PropertyAmenity", b =>
                {
                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("PropertyAmenities");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.PropertyImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyImage");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.SearchHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SearchQuery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SearchHistories");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyDocument", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PropertyId", "DocumentId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("PropertyId");

                    b.ToTable("UserPropertyDocuments");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyFavorite", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("FavoriteId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PropertyId");

                    b.HasIndex("FavoriteId");

                    b.HasIndex("PropertyId");

                    b.ToTable("UserPropertyFavorites");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyPayment", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PropertyId", "PaymentId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PropertyId");

                    b.ToTable("UserPropertyPayments");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyReview", b =>
                {
                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ReviewId");

                    b.ToTable("UserPropertyReviews");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.ChatMessage", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("ChatMessages")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Notification", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Preference", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("Preferences")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Property", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Amenity", null)
                        .WithMany("Properties")
                        .HasForeignKey("AmenityId");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.PropertyAmenity", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("PropertyAmenities")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.PropertyImage", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.SearchHistory", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("SearchHistories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyDocument", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("UserPropertyDocuments")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("UserPropertyDocuments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyFavorite", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Favorite", "Favorite")
                        .WithMany()
                        .HasForeignKey("FavoriteId");

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("UserPropertyFavorites")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("UserPropertyFavorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favorite");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyPayment", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("UserPropertyPayments")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("UserPropertyPayments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Property");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.UserPropertyReview", b =>
                {
                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.Property", "Property")
                        .WithMany("UserPropertyReviews")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalPropertyManagmentApi.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId");

                    b.HasOne("GP_DigitalPropertyManegmentApi.Data.Context.User", "User")
                        .WithMany("UserPropertyReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Amenity", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.Property", b =>
                {
                    b.Navigation("PropertyAmenities");

                    b.Navigation("PropertyImages");

                    b.Navigation("UserPropertyDocuments");

                    b.Navigation("UserPropertyFavorites");

                    b.Navigation("UserPropertyPayments");

                    b.Navigation("UserPropertyReviews");
                });

            modelBuilder.Entity("GP_DigitalPropertyManegmentApi.Data.Context.User", b =>
                {
                    b.Navigation("ChatMessages");

                    b.Navigation("Notifications");

                    b.Navigation("Preferences");

                    b.Navigation("SearchHistories");

                    b.Navigation("UserPropertyDocuments");

                    b.Navigation("UserPropertyFavorites");

                    b.Navigation("UserPropertyPayments");

                    b.Navigation("UserPropertyReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
